name: Engine Build

on:
  pull_request:
    types: [opened, edited, reopened]

permissions: write-all

env:
  BUILD_TYPE: Release

jobs:
#  build-ubuntu:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: install cpplint
#        run: python3 -m pip install cpplint
#
#      - name: Create linter folder
#        run: mkdir ${{github.workspace}}/linter
#
#      - name: Lint
#        run: python3 -m cpplint --recursive --output=junit ${{github.workspace}}/engine 2> ${{github.workspace}}/linter/output.xml
#        continue-on-error: true
#
#      - name: Download dependencies
#        run: python3 ${{github.workspace}}/scripts/install_deps.py
#
#      - name: Configure CMake
#        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
#
#      - name: Engine Build
#        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v2
#        with:
#            name: linux-assets
#            path: ${{github.workspace}}/linter

  build-windows:
    name: "build-windows"
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            build_type: "Release", cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
    env:
      glfw3_DIR: C:\Program Files (x86)\GLFW\lib\cmake\glfw3
      robot2D_ext_DIR: C:\Program Files (x86)\robot2D_ext\lib\cmake\robot2D_ext
      spdlog_DIR: C:\Program Files (x86)\spdlog\lib\cmake\spdlog
    steps:
      - uses: actions/checkout@v3

#      - name: install cpplint
#        run: python -m pip install cpplint
#
#      - name: Create linter folder
#        run: mkdir ${{github.workspace}}/linter
#
#      - name: Lint
#        run: python -m cpplint --recursive --output=junit ${{github.workspace}}/engine 2> ${{github.workspace}}/linter/output.xml
#        continue-on-error: true

      - name: Visual Studio Setup
        run: Invoke-Expression "${{matrix.config.environment_script}} x86_amd64"

      - name: Download dependencies
        run: python ${{github.workspace}}/scripts/install_deps.py --configuration 2 --compiler=3

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Engine Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-assets
          path: ${{github.workspace}}/linter

#  build-macos:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: install cpplint
#        run: python3 -m pip install cpplint
#
#      - name: Create linter folder
#        run: mkdir ${{github.workspace}}/linter
#
#      - name: Lint
#        run: python3 -m cpplint --recursive --output=junit ${{github.workspace}}/engine 2> ${{github.workspace}}/linter/output.xml
#        continue-on-error: true
#
#      - name: Download dependencies
#        run: python3 ${{github.workspace}}/scripts/install_deps.py
#
#      - name: Configure CMake
#        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
#
#      - name: Engine Build
#        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: macos-assets
#          path: ${{github.workspace}}/linter